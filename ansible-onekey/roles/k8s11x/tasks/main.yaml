---
- name: 修改 /etc/sysconfig/kubelet
  lineinfile:
      dest: /etc/sysconfig/kubelet
      regexp: 'KUBELET_EXTRA_ARGS'
      backrefs: yes
      line: 'Environment="KUBELET_EXTRA_ARGS=  --fail-swap-on=false --cgroup-driver=cgroupfs --pod-infra-container-image={{local_images}}/pause-amd64:3.1"'

- name: 设置kubelet自启动
  service: name=kubelet state=restarted enabled=yes  daemon_reload=yes

- name: 配置文件分发
  template: src=/srv/ansible/roles/k8s11x/templates/config11x.conf.j2    dest=/root/kubeadm-config.yaml
  when:  order  is defined 


- name: 配置文件提前拉取镜像
  shell: kubeadm config images pull --config /root/kubeadm-config.yaml
  when:  order  is defined

- name: pause-amd64:3.1镜像bug处理
  shell: docker pull {{local_images}}/pause-amd64:3.1 &&  docker tag  {{local_images}}/pause-amd64:3.1   k8s.gcr.io/pause:3.1

- name: pause-amd64:3.1镜像bug处理
  shell: docker pull {{local_images}}/pause:3.1 
  
- name: kubeadm初始化，如果失败会终止整个k8s集群的初始化
  shell: kubeadm  init --config /root/kubeadm-config.yaml
  register: info
  failed_when: "'troubleshoot' in info.stdout_lines "
  when: ( order  is defined ) and  ( order == 1 )

- name: 证书打包
  shell: cd /etc/kubernetes && tar czf pki{{k8s_version}}.tgz admin.conf pki/ca.* pki/sa.* pki/front-proxy-ca.* 
  when: ( order  is defined ) and  ( order == 1 )

- name: 证书上传到/etc/ansible/roles/k8s/files/
  fetch: src=/etc/kubernetes/pki{{ k8s_version }}.tgz  dest=/srv/ansible/roles/k8s11x/files/  flat=yes
  when: ( order  is defined ) and  ( order == 1 )

- name: 证书cp
  copy: src=/srv/ansible/roles/k8s11x/files/pki{{k8s_version}}.tgz  dest=/etc/kubernetes/pki{{k8s_version}}.tgz
  when: ( order  is defined ) and  ( order != 1 )

- name: 解压证书
  shell: cd /etc/kubernetes/  && tar xf pki{{k8s_version}}.tgz
  when: ( order  is defined ) and  ( order != 1 )

- name: kubeadm init其他master
  shell: kubeadm  init --config /root/kubeadm-config.yaml
  register: info
  failed_when: "'troubleshoot' in info.stdout_lines "
  when: ( order  is defined ) and  ( order != 1 )

- name:  inited
  shell: mkdir -p $HOME/.kube  && sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config  &&  sudo chown $(id -u):$(id -g) $HOME/.kube/config
  when:  order  is defined 

- name: 设置master运行容器
  shell:  kubectl taint nodes --all node-role.kubernetes.io/master-
  when: ( order  is defined ) and  ( order == 1 )

